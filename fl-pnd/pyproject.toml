# =====================================================================
# For a full TOML configuration guide, check the Flower docs:
# https://flower.ai/docs/framework/how-to-configure-pyproject-toml.html
# =====================================================================

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fl-pnd"
version = "1.0.0"
description = "A Flower federated learning project for Panax Notoginseng Disease segmentation."
license = "Apache-2.0"
# Dependencies for your Flower App
dependencies = [
    "flwr[simulation]>=1.20.0",
    "flwr-datasets[vision]>=0.5.0",
    #"torch==2.7.1",
    #"torchvision==0.22.1",
    "datasets>=2.16.0",          # Hugging Face Datasets library
    "tqdm>=4.62.3",              # Progress bar library used in task.py
    "Pillow>=9.0.0",             # Image processing library used in dataset.py
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "zzz"

# Point to your ServerApp and ClientApp objects
# Format: "<module>:<object>"
[tool.flwr.app.components]
serverapp = "fl_pnd.server_app:app"
clientapp = "fl_pnd.client_app:app"

# Custom config values accessible via `context.run_config`
[tool.flwr.app.config]
num-server-rounds = 3
fraction-fit = 0.5
local-epochs = 2

# Default federation to use when running the app
[tool.flwr.federations]
default = "local-simulation"

# Local simulation federation with 10 virtual SuperNodes
[tool.flwr.federations.local-simulation]
options.num-supernodes = 10

# In pyproject.toml



# --- [重要修改] 添加这部分来强制Ray识别GPU ---
# 它结合了显式声明GPU数量和强制注入环境变量
ray-init-args = """
{
    "num_gpus": 1,
    "runtime_env": {
        "env_vars": {"CUDA_VISIBLE_DEVICES": "0"}
    }
}
"""

# Remote federation example for use with SuperLink
[tool.flwr.federations.remote-federation]
address = "<SUPERLINK-ADDRESS>:<PORT>"
insecure = true  # Remove this line to enable TLS
# root-certificates = "<PATH/TO/ca.crt>"  # For TLS setup

# --- [重要] Allocate resources to clients (e.g., GPU) ---
# This section is CRITICAL for using the GPU.
[tool.flwr.client_resources]
num_cpus = 2
# Assign 0.5 GPUs to each client. If you have 1 GPU, Ray will
# be able to run a maximum of 1 / 0.5 = 2 clients simultaneously.
num_gpus = 0.5
